{"version":3,"file":"TemplateTypes.js","sourceRoot":"","sources":["TemplateTypes.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAC,MAAM,EAAC,iCAAiC","sourcesContent":["import {Common} from '../../common/CommonTypes';\n\nexport declare namespace Templates {\n\n    export interface ReusableTemplateConnectionInfo {\n        reusableTemplateFeedName?:string;\n        feedOutputPortName: string;\n        reusableTemplateInputPortName: string;\n        inputPortDisplayName?: string;\n        reusableTemplateProcessGroupName?: string;\n    }\n\n    export interface TemplateProcessorDatasourceDefinition {\n        processorType: string;\n        processorName: string;\n        processorId: string;\n        datasourceDefinition: TemplateProcessorDatasourceDefinition;\n    }\n\n    export interface PropertyAndProcessors {\n        properties: Property[];\n        processors: Processor[];\n    }\n\n    export interface Property {\n        key:string;\n        nameKey?:string;\n        idKey?:string;\n        selected: boolean;\n        value: string;\n        processor: Processor;\n        processorId:string;\n        processorType:string;\n        processGroupId:string;\n        processGroupName:string;\n        renderOptions:Common.Map<any>;\n        selectOptions?:any;\n        processorName: string;\n        processorOrigName?: string;\n        firstProperty?: boolean;\n        renderType?:string;\n        userEditable:boolean;\n        templateProperty?:Property;\n        templateValue:string;\n        renderWithCodeMirror?:boolean;\n        customProperty?:boolean;\n        inputProperty:boolean;\n        mentioId?:string;\n        sensitive?:boolean;\n        encryptedValue?:string;\n        displayName?:string;\n        displayValue?:string;\n        propertyDescriptor?:any;\n        hidden?:false;\n        required?:boolean;\n        uniqueId?:string;\n\n    }\n\n    export interface MetadataProperty {\n        name?:string;\n        key:string;\n        value:string;\n        description:string;\n        dataType:string;\n        type:string;\n        annotation?:string\n    }\n\n    export interface Processor {\n        processorId:string;\n        id: string;\n        name: string;\n        topIndex?: number;\n        sortIndex?:number;\n        /**\n         * All the properties for the Processor\n         */\n        allProperties?:Property[];\n        /**\n         * Only those properties that are userEditable\n         */\n        properties?:Property[];\n\n        feedPropertiesUrl?:string;\n\n        type:string;\n        groupId:string;\n        groupName:string;\n\n    }\n\n    export interface PropertyRenderType {\n        label:string;\n        type:string;\n        codemirror?:boolean;\n    }\n\n    export interface NiFiRemoteProcessGroup {\n        parentGroupId: string;\n        id: string;\n        targetUri: string;\n        targetUris: string;\n        targetSecure: boolean;\n        name: string;\n        comments: string;\n        communicationsTimeout: string;\n        yieldDuration: string;\n        transportProtocol: string;\n        localNetworkInterface: string;\n        proxyHost: string;\n        proxyPort: number;\n        proxyUser: string;\n        proxyPassword: string;\n        authorizationIssues: string[];\n        validationErrorsstring: string[];\n        transmitting: boolean;\n        inputPortCount: number;\n        outputPortCount: number;\n        activeRemoteInputPortCount: number;\n        inactiveRemoteInputPortCount: number;\n        activeRemoteOutputPortCount: number;\n        inactiveRemoteOutputPortCount: number;\n    }\n\n}\n"]}