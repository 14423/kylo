{"version":3,"file":"form-field-builder.js","sourceRoot":"","sources":["form-field-builder.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAC,WAAW,EAAC,6BAA6B;AACjD,OAAO,EAAC,kBAAkB,EAAC,+BAA+B;AAE1D,MAAM,OAAO,gBAAgB;IAIzB;QAFA,cAAoC,EAAE,CAAC;KAItC;;;;;IACD,KAAK,CAAC,YAAoC;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC;KACf;;;;;IAKD,KAAK;QACD,qBAAI,kBAAkB,GAAsB,EAAE,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAA+B,EAAC,CAAQ,EAAE,EAAE;YAC7D,qBAAI,WAAW,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;YAClC,IAAG,WAAW,CAAC,GAAG,IAAI,SAAS,IAAI,WAAW,CAAC,GAAG,IAAI,EAAE,EAAC;;gBAErD,WAAW,CAAC,GAAG,GAAG,QAAQ,GAAC,CAAC,CAAA;aAC/B;YACD,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACxC,CAAC,CAAC;QACH,OAAO,kBAAkB,CAAC;KAC7B;CAIJ","sourcesContent":["import {FieldConfig} from \"../model/FieldConfig\";\nimport {FieldConfigBuilder} from \"./field-config-builder\";\n\nexport class FormFieldBuilder {\n\n    fields :FieldConfigBuilder<any>[] = [];\n\n    constructor(){\n\n    }\n    field(fieldBuilder:FieldConfigBuilder<any>){\n        this.fields.push(fieldBuilder);\n        return this;\n    }\n\n    /**\n     * Builds the FieldConfig objects needed for a form\n     */\n    build():FieldConfig<any>[] {\n        let fieldConfiguration:FieldConfig<any>[] = [];\n        this.fields.forEach((builder:FieldConfigBuilder<any>,i:number) =>{\n            let fieldConfig = builder.build();\n            if(fieldConfig.key == undefined || fieldConfig.key == \"\"){\n                //auto add the key\n                fieldConfig.key = \"field-\"+i\n            }\n            fieldConfiguration.push(fieldConfig);\n        });\n        return fieldConfiguration;\n    }\n\n\n\n}\n"]}