{"version":3,"file":"field-config-builder.js","sourceRoot":"","sources":["field-config-builder.ts"],"names":[],"mappings":"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","sourcesContent":["import {GetErrorMessage, NgIfCallback, OnFieldChange} from \"../model/FieldConfig\";\nimport {Select} from \"../model/Select\";\nimport {Textarea} from \"../model/Textarea\";\nimport {RadioButton} from \"../model/RadioButton\";\nimport {InputText, InputType} from \"../model/InputText\";\nimport {Chip} from \"../model/Chip\";\nimport {SectionHeader} from \"../model/SectionHeader\";\nimport {Checkbox} from \"../model/Checkbox\";\nimport {DynamicFormFieldGroupBuilder} from \"./dynamic-form-field-group-builder\";\nimport {StaticText} from \"../model/StaticText\";\nimport {Icon} from '../model/Icon';\nimport {ObjectUtils} from '../../common/utils/object-utils';\nimport {ValidatorFn} from '@angular/forms';\n\n\nexport abstract class FieldConfigBuilder<T> {\n    protected value: any;\n    private key: string;\n    private required: boolean;\n    private order: number;\n    private placeholder: string;\n    private model?: any;\n    private hint?: string;\n    private readonlyValue: string;\n    private modelValueProperty: string;\n    private pattern?: string;\n    private onModelChange?: OnFieldChange;\n    private validators?: ValidatorFn[] | null;\n    private disabled?: boolean;\n    private placeHolderLocaleKey:string;\n    private styleClass:string;\n    private formGroupBuilder?:DynamicFormFieldGroupBuilder\n\n    private ngIfCallback ?:NgIfCallback;\n\n    private getErrorMessage ?:GetErrorMessage;\n\n\n\n    protected constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n        this.formGroupBuilder = formGroupBuilder;\n    }\n\n    abstract getObjectType():any;\n\n\n    done() : DynamicFormFieldGroupBuilder{\n        return this.formGroupBuilder;\n    }\n\n    ngIf(callback:NgIfCallback, bind?:any){\n        if(bind) {\n            this.ngIfCallback = callback.bind(bind);\n        }\n        else {\n            this.ngIfCallback = callback;\n        }\n        return this;\n    }\n\n    setStyleClass(value:string){\n            this.styleClass = value;\n            return this;\n    }\n\n    containsStyle(value:string):boolean {\n        return (this.styleClass != undefined && this.styleClass.split(\" \").find((v => v ==value.trim())) == undefined);\n    }\n\n    appendStyleClass(value:string){\n        if(value) {\n            if(this.styleClass == undefined || !this.containsStyle(value)) {\n                if(this.styleClass == undefined){\n                    this.styleClass = value.trim();\n                }\n                else {\n                    this.styleClass += \" \"+value.trim();\n                }\n            }\n        }\n        return this;\n    }\n    setFormGroupBuilder(formGroupBuilder:DynamicFormFieldGroupBuilder){\n        this.formGroupBuilder = this.formGroupBuilder;\n        return this;\n    }\n    setKey(value: string)  {\n        this.key = value;\n        return this;\n    }\n\n    setValue(value:any){\n        this.value = value;\n        return this;\n    }\n\n    setPlaceholderLocaleKey(value:string){\n        this.placeHolderLocaleKey = value;\n        return this;\n    }\n\n    setRequired(value: boolean) {\n        this.required = value;\n        return this;\n    }\n\n    setOrder(value: number){\n        this.order = value;\n        return this;\n    }\n\n    setErrorMessageLookup(value:GetErrorMessage){\n        this.getErrorMessage = value;\n        return this;\n    }\n\n    setPlaceholder(value: string) {\n        this.placeholder = value;\n        return this;\n    }\n\n    getPlaceHolder(){\n        return this.placeholder;\n    }\n\n    setHint(value: string) {\n        this.hint = value;\n        return this;\n    }\n\n    getHint(){\n        return this.hint;\n    }\n\n    setModelValueProperty(value: string) {\n        this.modelValueProperty = value;\n        return this;\n    }\n\n    setPattern(value: string) {\n        this.pattern = value;\n        return this;\n    }\n\n    setDisabled(value: boolean) {\n        this.disabled = value;\n        return this;\n    }\n\n    onChange(value: OnFieldChange, bind?:any) {\n        if(bind) {\n            this.onModelChange = value.bind(bind);\n        }\n        else {\n            this.onModelChange = value;\n        }\n        return this;\n    }\n\n    setValidators(value: ValidatorFn[]) {\n        this.validators = value;\n        return this;\n    }\n\n    setReadonlyValue(value: string) {\n        this.readonlyValue = value;\n        return this;\n    }\n\n    addValidator(value: ValidatorFn) {\n        if (this.validators == undefined) {\n            this.validators = [];\n        }\n        this.validators.push(value);\n        return this;\n    }\n\n\n    setModel(value: any) {\n        this.model = value;\n        return this;\n    }\n    \n    update<B extends FieldConfigBuilder<any>>(builder:B){\n             this.key = builder.key;\n             this.required = builder.required;\n             this.placeholder = builder.placeholder;\n             this.value = builder.value;\n             this.hint = builder.hint;\n             this.validators = builder.validators;\n             this.model = builder.model;\n             this.modelValueProperty = builder.modelValueProperty;\n             this.onModelChange = builder.onModelChange;\n             this.pattern = builder.pattern;\n             this.order = builder.order;\n             this.readonlyValue = builder.readonlyValue;\n             this.disabled = builder.disabled;\n             this.placeHolderLocaleKey = builder.placeHolderLocaleKey;\n             this.styleClass =builder.styleClass;\n             this.ngIfCallback =builder.ngIfCallback;\n             this.getErrorMessage =builder.getErrorMessage\n        return this;\n    }\n\n    protected buildOptions(): any {\n        let option: any = {\n            key: this.key,\n            required: this.required,\n            placeholder: this.placeholder,\n            value: this.value,\n            hint: this.hint,\n            validators: this.validators,\n            model: this.model,\n            modelValueProperty: this.modelValueProperty,\n            onModelChange: this.onModelChange,\n            pattern: this.pattern,\n            order: this.order,\n            readonlyValue: this.readonlyValue,\n            disabled: this.disabled,\n            placeholderLocaleKey:this.placeHolderLocaleKey,\n            styleClass:this.styleClass,\n            ngIf:this.ngIfCallback,\n            getErrorMessage:this.getErrorMessage\n        }\n        return option;\n    }\n\n\n\n\n    build(): T {\n        if(this.formGroupBuilder.dynamicFormBuilder.styleClassStrategy){\n            this.formGroupBuilder.dynamicFormBuilder.styleClassStrategy.applyStyleClass(this);\n        }\n        let options = this.buildOptions();\n        return ObjectUtils.newType(options,this.getObjectType());\n    }\n}\n\nexport class ConfigurationFieldBuilder extends FieldConfigBuilder<any> {\n\n    public constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n        super(formGroupBuilder)\n    }\n\n    getObjectType(): any {\n        return \"ConfigurationFieldBuilder\";\n    }\n\n    build():any{\n        //override.\n        console.log(\"ConfigurationFieldBuilder cant be built \")\n    }\n\n}\n\nexport class SelectFieldBuilder extends FieldConfigBuilder<Select> {\n\n    options: {label: string, value: string}[] = [];\n    public constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n       super(formGroupBuilder)\n    }\n\n    getObjectType():any {\n        return Select;\n    }\n    setOptions(options:{label: string, value: string}[]):SelectFieldBuilder {\n        this.options = options;\n        return this;\n    }\n\n    setOptionsArray(options:any[]){\n        this.options = options.map(item => {\n            return {label:item,value:item};\n        });\n        return this;\n    }\n\n    addOption(label: string, value: string): SelectFieldBuilder{\n        this.options.push({label: label, value: value});\n        return this;\n    }\n\n    protected buildOptions(){\n        let options = super.buildOptions();\n        options.options = this.options;\n        return options;\n    }\n}\n\n\nexport class RadioButtonFieldBuilder extends FieldConfigBuilder<RadioButton> {\n    options: {label: string, value: string}[] = [];\n\n    public constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n        super(formGroupBuilder)\n    }\n\n    getObjectType():any {\n        return RadioButton;\n    }\n\n    setOptions(options:{label: string, value: string}[]):RadioButtonFieldBuilder {\n        this.options = options;\n        return this;\n    }\n\n    setOptionsArray(options:any[]){\n        this.options = options.map(item => {\n            return {label:item,value:item};\n        });\n        return this;\n    }\n\n    addOption(label: string, value: string): RadioButtonFieldBuilder{\n        this.options.push({label: label, value: value});\n        return this;\n    }\n\n    protected buildOptions(){\n        let options = super.buildOptions();\n        options.options = this.options;\n        return options;\n    }\n}\n\nexport class ChipsFieldBuilder extends FieldConfigBuilder<Chip> {\n    items:any[]\n    stacked:boolean = false;\n\n    public constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n        super(formGroupBuilder)\n    }\n\n    getObjectType():any {\n        return Chip;\n    }\n\n    setItems(values:any):ChipsFieldBuilder {\n        this.items = values;\n        return this;\n    }\n\n    setStacked(stacked:boolean):ChipsFieldBuilder {\n        this.stacked = stacked;\n        return this;\n    }\n\n\n    protected buildOptions(){\n        let options = super.buildOptions();\n        options.items = this.items;\n        options.values = this.value;\n        options.stacked = this.stacked;\n        return options;\n    }\n}\n\n\nexport class CheckboxFieldBuilder extends FieldConfigBuilder<Checkbox> {\n\n    trueValue:string;\n    falseValue:string;\n    checked:boolean;\n\n    public constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n        super(formGroupBuilder)\n    }\n\n    getObjectType():any {\n        return Checkbox;\n    }\n\n    setTrueValue(value:string) :CheckboxFieldBuilder{\n        this.trueValue = value;\n        return this;\n    }\n\n    setFalseValue(value:string) :CheckboxFieldBuilder{\n        this.falseValue = value;\n        return this;\n    }\n\n    setChecked(value:boolean) :CheckboxFieldBuilder{\n        this.checked = value;\n        return this;\n    }\n\n    protected buildOptions(){\n        let options = super.buildOptions();\n        options.trueValue = this.trueValue;\n        options.falseValue = this.falseValue;\n        return options;\n    }\n\n}\n\nexport class InputTextFieldBuilder extends FieldConfigBuilder<InputText> {\n\n    type:InputType;\n    private readonly:boolean;\n\n    public constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n        super(formGroupBuilder)\n    }\n\n    getObjectType():any {\n        return InputText;\n    }\n\n\n    setReadonly(value:boolean){\n        this.readonly = value;\n        return this;\n    }\n    setType(type:InputType):InputTextFieldBuilder{\n        this.type = type;\n        return this;\n    }\n\n    protected buildOptions(){\n        let options = super.buildOptions();\n        options.type = this.type;\n        options.readonly = this.readonly;\n        return options;\n    }\n}\n\nexport  class SectionHeaderBuilder extends FieldConfigBuilder<SectionHeader> {\n\n    showDivider:boolean = true;\n\n    public constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n        super(formGroupBuilder)\n    }\n\n    setShowDivider(showDivider:boolean){\n        this.showDivider = showDivider;\n        return this;\n    }\n    getObjectType():any {\n        return SectionHeader;\n    }\n\n    protected buildOptions(){\n        let options = super.buildOptions();\n        options.showDivider = this.showDivider;\n        return options;\n    }\n}\n\nexport  class StaticTextBuilder extends FieldConfigBuilder<StaticText> {\n\n    showDivider:boolean = true;\n    staticText:string;\n    textStyleClass:string\n\n    public constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n        super(formGroupBuilder)\n    }\n\n    setShowDivider(showDivider:boolean){\n        this.showDivider = showDivider;\n        return this;\n    }\n\n\n    setText(text:string){\n        this.staticText = text;\n        return this;\n    }\n\n    setTextStyleClass(value:string){\n        this.textStyleClass = value;\n        return this;\n    }\n\n\n    getObjectType():any {\n        return StaticText;\n    }\n\n    protected buildOptions(){\n        let options = super.buildOptions();\n        options.showDivider = this.showDivider;\n        options.staticText = this.staticText;\n        options.textStyleClass = this.textStyleClass;\n        return options;\n    }\n}\n\nexport  class TextareaFieldBuilder extends FieldConfigBuilder<Textarea> {\n\n    private readonly:boolean;\n\n    public constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n        super(formGroupBuilder)\n    }\n\n    getObjectType():any {\n        return Textarea;\n    }\n\n    setReadonly(value:boolean) {\n        this.readonly = value;\n        return this;\n    }\n\n    protected buildOptions(){\n        let options = super.buildOptions();\n        options.readonly = this.readonly;\n        return options;\n    }\n\n}\n\nexport class IconFieldBuilder extends FieldConfigBuilder<Icon> {\n\n    private name: string;\n    private size: number;\n\n    public constructor(formGroupBuilder?:DynamicFormFieldGroupBuilder) {\n        super(formGroupBuilder)\n    }\n\n    getObjectType():any {\n        return Icon;\n    }\n\n    setName(name:string){\n        this.name = name;\n        return this;\n    }\n\n    setSize(size:number){\n        this.size = size;\n        return this;\n    }\n\n    protected buildOptions(){\n        let options = super.buildOptions();\n        options.name = this.name;\n        options.size = this.size;\n        return options;\n    }\n}\n"]}